package com.example.abc

import android.os.Bundle
import android.widget.Button
import android.widget.RadioButton
import android.widget.RadioGroup
import android.widget.TextView
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity

class SelfAssessmentActivity : AppCompatActivity() {
    private lateinit var questionTextView: TextView
    private lateinit var optionsGroup: RadioGroup
    private lateinit var nextButton: Button

    private val questions = listOf(
        Pair(
            "In the past week, how often have you felt very anxious?" to listOf(
                "ЁЯМЯ Never",
                "ЁЯМдя╕П Sometimes",
                "тШБя╕П Often",
                "ЁЯМзя╕П Very often"
            ),
            "рдкрд┐рдЫрд▓реЗ рд╣рдлреНрддреЗ рдореЗрдВ, рдЖрдкрдиреЗ рдХрд┐рддрдиреА рдмрд╛рд░ рдмрд╣реБрдд рдЕрдзрд┐рдХ рдЪрд┐рдВрддрд╛ рдорд╣рд╕реВрд╕ рдХреА?" to listOf(
                "ЁЯМЯ рдХрднреА рдирд╣реАрдВ",
                "ЁЯМдя╕П рдХрднреА-рдХрднреА",
                "тШБя╕П рдЕрдХреНрд╕рд░",
                "ЁЯМзя╕П рдмрд╣реБрдд рдЬреНрдпрд╛рджрд╛"
            )
        ),
        Pair(
            "Do you have trouble sleeping?" to listOf(
                "ЁЯШ┤ No, I sleep well",
                "ЁЯМЩ Sometimes, takes time",
                "ЁЯМзя╕П Yes, I struggle to sleep"
            ),
            "рдХреНрдпрд╛ рдЖрдкрдХреЛ рд╕реЛрдиреЗ рдореЗрдВ рдХрдард┐рдирд╛рдИ рд╣реЛрддреА рд╣реИ?" to listOf(
                "ЁЯШ┤ рдирд╣реАрдВ, рдореИрдВ рдареАрдХ рд╕реЗ рд╕реЛрддрд╛/рд╕реЛрддреА рд╣реВрдБ",
                "ЁЯМЩ рдХрднреА-рдХрднреА, рдереЛрдбрд╝рд╛ рд╕рдордп рд▓рдЧрддрд╛ рд╣реИ",
                "ЁЯМзя╕П рд╣рд╛рдБ, рд╕реЛрдиреЗ рдореЗрдВ рджрд┐рдХреНрдХрдд рд╣реЛрддреА рд╣реИ"
            )
        ),
        Pair(
            "Do you feel like you have no one to talk to?" to listOf(
                "ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж No, I have support",
                "ЁЯШХ Sometimes",
                "ЁЯШФ Yes, I feel very lonely"
            ),
            "рдХреНрдпрд╛ рдЖрдкрдХреЛ рдХрднреА рдРрд╕рд╛ рд▓рдЧрддрд╛ рд╣реИ рдХрд┐ рдЖрдк рдХрд┐рд╕реА рд╕реЗ рдмрд╛рдд рдирд╣реАрдВ рдХрд░ рд╕рдХрддреЗ?" to listOf(
                "ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж рдирд╣реАрдВ, рдореЗрд░реЗ рдкрд╛рд╕ рд╕рдкреЛрд░реНрдЯрд┐рд╡ рд▓реЛрдЧ рд╣реИрдВ",
                "ЁЯШХ рдХрднреА-рдХрднреА",
                "ЁЯШФ рд╣рд╛рдБ, рдореИрдВ рдмрд╣реБрдд рдЕрдХреЗрд▓рд╛/рдЕрдХреЗрд▓реА рдорд╣рд╕реВрд╕ рдХрд░рддрд╛/рдХрд░рддреА рд╣реВрдБ"
            )
        ),
        Pair(
            "Have you lost interest in daily activities?" to listOf(
                "ЁЯШГ No, I enjoy them",
                "ЁЯШР Sometimes",
                "ЁЯШЮ Yes, I don't feel good anymore"
            ),
            "рдХреНрдпрд╛ рдЖрдк рд░реЛрдЬрд╝ рдХреА рдПрдХреНрдЯрд┐рд╡рд┐рдЯреАрдЬрд╝ рдореЗрдВ рд░реБрдЪрд┐ рдЦреЛ рдЪреБрдХреЗ рд╣реИрдВ?" to listOf(
                "ЁЯШГ рдирд╣реАрдВ, рдореИрдВ рдПрдВрдЬреЙрдп рдХрд░рддрд╛/рдХрд░рддреА рд╣реВрдБ",
                "ЁЯШР рдХрднреА-рдХрднреА",
                "ЁЯШЮ рд╣рд╛рдБ, рдореБрдЭреЗ рдЕрдм рдХреБрдЫ рдЕрдЪреНрдЫрд╛ рдирд╣реАрдВ рд▓рдЧрддрд╛"
            )
        ),
        Pair(
            "Do you feel tired throughout the day, even after proper sleep?" to listOf(
                "тЪб No, I feel energetic",
                "ЁЯМЩ Sometimes",
                "ЁЯШ┤ Yes, always tired"
            ),
            "рдХреНрдпрд╛ рдЖрдкрдХреЛ рджрд┐рдирднрд░ рдердХрд╛рди рдорд╣рд╕реВрд╕ рд╣реЛрддреА рд╣реИ, рднрд▓реЗ рд╣реА рдЖрдк рдареАрдХ рд╕реЗ рд╕реЛрдП рд╣реЛрдВ?" to listOf(
                "тЪб рдирд╣реАрдВ, рдореИрдВ рдПрдирд░реНрдЬреЗрдЯрд┐рдХ рдорд╣рд╕реВрд╕ рдХрд░рддрд╛/рдХрд░рддреА рд╣реВрдБ",
                "ЁЯМЩ рдХрднреА-рдХрднреА",
                "ЁЯШ┤ рд╣рд╛рдБ, рдореБрдЭреЗ рд╣рдореЗрд╢рд╛ рдердХрд╛рди рд▓рдЧрддреА рд╣реИ"
            )
        ),
        Pair(
            "Do you get irritated easily over small things?" to listOf(
                "ЁЯШЗ No, I stay calm",
                "ЁЯШС Sometimes",
                "ЁЯШб Yes, I get angry quickly"
            ),
            "рдХреНрдпрд╛ рдЖрдкрдХреЛ рдЫреЛрдЯреА-рдЫреЛрдЯреА рдЪреАрдЬрд╝реЛрдВ рдкрд░ рдЧреБрд╕реНрд╕рд╛ рдЖ рдЬрд╛рддрд╛ рд╣реИ?" to listOf(
                "ЁЯШЗ рдирд╣реАрдВ, рдореИрдВ рд╢рд╛рдВрдд рд░рд╣рддрд╛/рд░рд╣рддреА рд╣реВрдБ",
                "ЁЯШС рдХрднреА-рдХрднреА",
                "ЁЯШб рд╣рд╛рдБ, рдмрд╣реБрдд рдЬрд▓реНрджреА рдЧреБрд╕реНрд╕рд╛ рдЖ рдЬрд╛рддрд╛ рд╣реИ"
            )
        )
    )

    private var currentQuestionIndex = 0
    private var score = 0

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_self_assessment)

        questionTextView = findViewById(R.id.questionTextView)
        optionsGroup = findViewById(R.id.optionsGroup)
        nextButton = findViewById(R.id.nextButton)

        loadQuestion()

        nextButton.setOnClickListener {
            val selectedOptionId = optionsGroup.checkedRadioButtonId
            if (selectedOptionId != -1) {
                val selectedOption = findViewById<RadioButton>(selectedOptionId).text.toString()
                updateScore(selectedOption)
                currentQuestionIndex++
                if (currentQuestionIndex < questions.size) {
                    loadQuestion()
                } else {
                    showResult()
                }
            } else {
                Toast.makeText(this, "рдХреГрдкрдпрд╛ рдПрдХ рдЙрддреНрддрд░ рдЪреБрдиреЗрдВ", Toast.LENGTH_SHORT).show()
            }
        }
    }

    private fun loadQuestion() {
        val (englishQuestion, englishOptions) = questions[currentQuestionIndex].first
        val (hindiQuestion, hindiOptions) = questions[currentQuestionIndex].second

        questionTextView.text = "$englishQuestion\n$hindiQuestion"
        optionsGroup.removeAllViews()

        // Combining English and Hindi options together
        val combinedOptions = englishOptions.zip(hindiOptions) { en, hi -> "$en\n$hi" }

        for (option in combinedOptions) {
            val radioButton = RadioButton(this)
            radioButton.text = option
            optionsGroup.addView(radioButton)
        }
    }

    private fun updateScore(selectedOption: String) {
        when {
            selectedOption.contains("ЁЯМзя╕П Very often") || selectedOption.contains("ЁЯШФ Yes, I feel very lonely") || selectedOption.contains(
                "ЁЯШЮ Yes, I don't feel good anymore"
            ) || selectedOption.contains("ЁЯШ┤ Yes, always tired") || selectedOption.contains("ЁЯШб Yes, I get angry quickly") -> score += 2

            selectedOption.contains("тШБя╕П Often") || selectedOption.contains("ЁЯШХ Sometimes") || selectedOption.contains(
                "ЁЯШР Sometimes"
            ) || selectedOption.contains("ЁЯМЩ Sometimes") || selectedOption.contains("ЁЯШС Sometimes") -> score += 1
        }
    }

    private fun showResult() {
        val resultMessage = when {
            score >= 8 -> "You seem to be experiencing a lot of stress. Please talk to someone you trust.\nрдЖрдкрдХреЛ рдмрд╣реБрдд рдЬреНрдпрд╛рджрд╛ рдЪрд┐рдВрддрд╛ рд╣реЛрддреА рд╣реИред рдХреГрдкрдпрд╛ рдХрд┐рд╕реА рд╕реЗ рдмрд╛рдд рдХрд░реЗрдВред"
            score in 4..7 -> "Your mental state is normal, but take care of yourself.\nрдЖрдкрдХреА рдорд╛рдирд╕рд┐рдХ рд╕реНрдерд┐рддрд┐ рд╕рд╛рдорд╛рдиреНрдп рд╣реИ, рд▓реЗрдХрд┐рди рдЦреБрдж рдХрд╛ рдзреНрдпрд╛рди рд░рдЦреЗрдВред"
            else -> "You have positive energy! Stay happy.\nрдЖрдкрдореЗрдВ рдкреЙрдЬрд┐рдЯрд┐рд╡ рдПрдирд░реНрдЬреА рд╣реИ! рдРрд╕реЗ рд╣реА рдЦреБрд╢ рд░рд╣реЗрдВред"
        }
        Toast.makeText(this, resultMessage, Toast.LENGTH_LONG).show()
    }
}

package com.example.abc

import android.annotation.SuppressLint
import android.app.AlertDialog
import android.os.Bundle
import android.widget.Button
import android.widget.RadioButton
import android.widget.RadioGroup
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity

class QuizActivity : AppCompatActivity() {

    private lateinit var questionTextView: TextView
    private lateinit var optionsGroup: RadioGroup
    private lateinit var submitButton: Button
    private lateinit var toggleLanguageButton: Button

    private var isHindi = false // Default language is English

    private val questions = listOf(
        Pair(
            "How are you feeling today?" to listOf("ЁЯША Very happy", "ЁЯШК Somewhat okay", "ЁЯШР Neutral", "ЁЯе║ Sad", "ЁЯШУ Very down"),
            "рдЖрдЬ рдЖрдк рдХреИрд╕рд╛ рдорд╣рд╕реВрд╕ рдХрд░ рд░рд╣реЗ рд╣реИрдВ?" to listOf("ЁЯША рдмрд╣реБрдд рдЦреБрд╢", "ЁЯШК рдереЛрдбрд╝рд╛ рдареАрдХ", "ЁЯШР рд╕рд╛рдорд╛рдиреНрдп", "ЁЯе║ рдЙрджрд╛рд╕", "ЁЯШУ рдмрд╣реБрдд рдирд┐рд░рд╛рд╢")
        ),
        Pair(
            "What is your energy level today?" to listOf("ЁЯПГтАНтЩВя╕П High", "ЁЯЪ╢тАНтЮбя╕П Moderate", "ЁЯзНтАНтЩВя╕П Low"),
            "рдЖрдЬ рдЖрдкрдХреА рдКрд░реНрдЬрд╛ рдХрд╛ рд╕реНрддрд░ рдХреИрд╕рд╛ рд╣реИ?" to listOf("ЁЯПГтАНтЩВя╕П рдЕрдзрд┐рдХ", "ЁЯЪ╢тАНтЮбя╕П рдордзреНрдпрдо", "ЁЯзНтАНтЩВя╕П рдХрдо")
        ),
        Pair(
            "What caused you the most stress today?" to listOf("ЁЯПл Studies / Work", "ЁЯПа Family", "тЭдя╕П Relationship", "ЁЯТ░ Financial issues", "ЁЯд╖тАНтЩВя╕П No specific reason"),
            "рдЖрдЬ рдЖрдкрдХреЛ рд╕рдмрд╕реЗ рдЬреНрдпрд╛рджрд╛ рддрдирд╛рд╡ рдХрд┐рд╕ рдЪреАрдЬрд╝ рд╕реЗ рд╣реБрдЖ?" to listOf("ЁЯПл рдкрдврд╝рд╛рдИ / рдХрд╛рдо", "ЁЯПа рдкрд░рд┐рд╡рд╛рд░", "тЭдя╕П рд░рд┐рд╢реНрддреЗ", "ЁЯТ░ рдЖрд░реНрдерд┐рдХ рд╕рдорд╕реНрдпрд╛", "ЁЯд╖тАНтЩВя╕П рдХреЛрдИ рд╡рд┐рд╢реЗрд╖ рдХрд╛рд░рдг рдирд╣реАрдВ")
        ),
        Pair(
            "Did you get enough sleep last night?" to listOf("ЁЯШ┤ Yes, fully rested", "ЁЯШХ Somewhat", "ЁЯШЯ Not really", "ЁЯШй Barely slept"),
            "рдХреНрдпрд╛ рдЖрдкрдХреЛ рдХрд▓ рд░рд╛рдд рднрд░рдкреВрд░ рдиреАрдВрдж рдорд┐рд▓реА?" to listOf("ЁЯШ┤ рд╣рд╛рдБ, рдкреВрд░реА рддрд░рд╣ рдЖрд░рд╛рдо рдХрд┐рдпрд╛", "ЁЯШХ рдереЛрдбрд╝рд╛ рдмрд╣реБрдд", "ЁЯШЯ рдирд╣реАрдВ, рдЬреНрдпрд╛рджрд╛ рдирд╣реАрдВ", "ЁЯШй рдмрд┐рд▓реНрдХреБрд▓ рдирд╣реАрдВ")
        ),
        Pair(
            "How social did you feel today?" to listOf("ЁЯШК Very social", "ЁЯЩВ Somewhat social", "ЁЯШР Neutral", "ЁЯЩГ Avoided socializing"),
            "рдЖрдЬ рдЖрдк рдХрд┐рддрдиреЗ рд╕рд╛рдорд╛рдЬрд┐рдХ рдорд╣рд╕реВрд╕ рдХрд░ рд░рд╣реЗ рдереЗ?" to listOf("ЁЯШК рдмрд╣реБрдд рдЬреНрдпрд╛рджрд╛", "ЁЯЩВ рдереЛрдбрд╝рд╛ рдмрд╣реБрдд", "ЁЯШР рд╕рд╛рдорд╛рдиреНрдп", "ЁЯЩГ рд╕рд╛рдорд╛рдЬрд┐рдХрддрд╛ рд╕реЗ рдмрдЪрд╛")
        ),
        Pair(
            "Have you exercised today?" to listOf("ЁЯТк Yes", "ЁЯЪ╢тАНтЩВя╕П Just a little", "ЁЯЫЛя╕П No"),
            "рдХреНрдпрд╛ рдЖрдкрдиреЗ рдЖрдЬ рд╡реНрдпрд╛рдпрд╛рдо рдХрд┐рдпрд╛?" to listOf("ЁЯТк рд╣рд╛рдБ", "ЁЯЪ╢тАНтЩВя╕П рдереЛрдбрд╝рд╛ рдмрд╣реБрдд", "ЁЯЫЛя╕П рдирд╣реАрдВ")
        ),
        Pair(
            "Have you eaten healthy food today?" to listOf("ЁЯеЧ Yes, very healthy", "ЁЯНФ Somewhat", "ЁЯНЯ Not really"),
            "рдХреНрдпрд╛ рдЖрдкрдиреЗ рдЖрдЬ рд╕реНрд╡рд╕реНрде рднреЛрдЬрди рдЦрд╛рдпрд╛?" to listOf("ЁЯеЧ рд╣рд╛рдБ, рдмрд╣реБрдд рд╕реНрд╡рд╕реНрде", "ЁЯНФ рдереЛрдбрд╝рд╛ рдмрд╣реБрдд", "ЁЯНЯ рдирд╣реАрдВ")
        ),
        Pair(
            "How motivated do you feel today?" to listOf("ЁЯФе Very motivated", "ЁЯШК Somewhat motivated", "ЁЯШР Neutral", "ЁЯШЮ Not motivated"),
            "рдЖрдЬ рдЖрдк рдХрд┐рддрдиреЗ рдкреНрд░реЗрд░рд┐рдд рдорд╣рд╕реВрд╕ рдХрд░ рд░рд╣реЗ рд╣реИрдВ?" to listOf("ЁЯФе рдмрд╣реБрдд рдкреНрд░реЗрд░рд┐рдд", "ЁЯШК рдереЛрдбрд╝рд╛ рдмрд╣реБрдд", "ЁЯШР рд╕рд╛рдорд╛рдиреНрдп", "ЁЯШЮ рдмрд┐рд▓реНрдХреБрд▓ рдирд╣реАрдВ")
        )
    )


    private val correctAnswers = listOf(0, 1, 2, 0, 0, 0, 0, 0) // Example

    private var currentQuestionIndex = 0

    @SuppressLint("MissingInflatedId")
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_quiz)

        questionTextView = findViewById(R.id.questionTextView)
        optionsGroup = findViewById(R.id.optionsGroup)
        submitButton = findViewById(R.id.submitButton)
        toggleLanguageButton = findViewById(R.id.btnToggleLanguage)

        loadQuestion()

        submitButton.setOnClickListener {
            checkAnswer()
        }

        toggleLanguageButton.setOnClickListener {
            isHindi = !isHindi
            toggleLanguageButton.text = if (isHindi) "Switch to English" else "Switch to Hindi"
            loadQuestion() // Reload question in selected language
        }
    }

    private fun loadQuestion() {
        if (currentQuestionIndex < questions.size) {
            val (english, hindi) = questions[currentQuestionIndex]
            val question = if (isHindi) hindi.first else english.first
            val options = if (isHindi) hindi.second else english.second
            optionsGroup.clearCheck() // Reset radio selection after language toggle

            questionTextView.text = question
            optionsGroup.removeAllViews()  // Clear previous options

            for ((index, option) in options.withIndex()) {
                val radioButton = RadioButton(this)
                radioButton.text = option
                radioButton.id = index
                optionsGroup.addView(radioButton)
            }
        } else {
            showResult()
        }
    }

    private fun checkAnswer() {
        val selectedId = optionsGroup.checkedRadioButtonId
        if (selectedId == -1) {
            showMessage(if (isHindi) "рдХреГрдкрдпрд╛ рдПрдХ рдЙрддреНрддрд░ рдЪреБрдиреЗрдВ!" else "Please select an answer!")
            return
        }

        val message = if (selectedId == correctAnswers[currentQuestionIndex]) {
            if (isHindi) "ЁЯОЙ рд╕рд╣реА рдЙрддреНрддрд░!" else "ЁЯОЙ Correct Answer!"
        } else {
            if (isHindi) "тЭМ рдЧрд▓рдд рдЙрддреНрддрд░! рдлрд┐рд░ рд╕реЗ рдХреЛрд╢рд┐рд╢ рдХрд░реЗрдВред" else "тЭМ Wrong Answer! Try Again."
        }

        showMessage(message)
        currentQuestionIndex++
        loadQuestion() // Move to the next question
        optionsGroup.clearCheck()  // Reset the selection after moving to the next question
    }

    private fun showMessage(message: String) {
        AlertDialog.Builder(this)
            .setTitle(if (isHindi) "рдХреНрд╡рд┐рдЬрд╝ рдкрд░рд┐рдгрд╛рдо" else "Quiz Result")
            .setMessage(message)
            .setPositiveButton("OK") { dialog, _ -> dialog.dismiss() }
            .show()
    }

    private fun showResult() {
        AlertDialog.Builder(this)
            .setTitle(if (isHindi) "рдХреНрд╡рд┐рдЬрд╝ рдкреВрд░рд╛ рд╣реБрдЖ" else "Quiz Completed")
            .setMessage(if (isHindi) "рдЖрдкрдиреЗ рдХреНрд╡рд┐рдЬрд╝ рдкреВрд░рд╛ рдХрд░ рд▓рд┐рдпрд╛ рд╣реИ!" else "You have completed the quiz!")
            .setPositiveButton("OK") { dialog, _ -> finish() }
            .show()
    }
}
